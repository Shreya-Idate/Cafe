{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\React\\\\cafe\\\\src\\\\Coponents\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Row, FormGroup, FormControl, ControlLabel, Button, HelpBlock } from 'react-bootstrap';\nimport './login.css';\nimport { isEmail, isEmpty, isLength, isContainWhiteSpace } from 'shared/validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      let {\n        formData\n      } = this.state;\n      formData[name] = value;\n      this.setState({\n        formData: formData\n      });\n    };\n\n    this.validateLoginForm = e => {\n      let errors = {};\n      const {\n        formData\n      } = this.state;\n\n      if (isEmpty(formData.email)) {\n        errors.email = \"Email can't be blank\";\n      } else if (!isEmail(formData.email)) {\n        errors.email = \"Please enter a valid email\";\n      }\n\n      if (isEmpty(formData.password)) {\n        errors.password = \"Password can't be blank\";\n      } else if (isContainWhiteSpace(formData.password)) {\n        errors.password = \"Password should not contain white spaces\";\n      } else if (!isLength(formData.password, {\n        gte: 6,\n        lte: 16,\n        trim: true\n      })) {\n        errors.password = \"Password's length must between 6 to 16\";\n      }\n\n      if (isEmpty(errors)) {\n        return true;\n      } else {\n        return errors;\n      }\n    };\n\n    this.login = e => {\n      e.preventDefault();\n      let errors = this.validateLoginForm();\n\n      if (errors === true) {\n        alert(\"You are successfully signed in...\");\n        window.location.reload();\n      } else {\n        this.setState({\n          errors: errors,\n          formSubmitted: true\n        });\n      }\n    };\n\n    this.state = {\n      formData: {},\n      // Contains login form data\n      errors: {},\n      // Contains login field errors\n      formSubmitted: false,\n      // Indicates submit status of login form\n      loading: false // Indicates in progress state of login form\n\n    };\n  }\n\n  render() {\n    const {\n      errors,\n      formSubmitted\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.login,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            controlId: \"email\",\n            validationState: formSubmitted ? errors.email ? 'error' : 'success' : null,\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"text\",\n              name: \"email\",\n              placeholder: \"Enter your email\",\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(HelpBlock, {\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            controlId: \"password\",\n            validationState: formSubmitted ? errors.password ? 'error' : 'success' : null,\n            children: [/*#__PURE__*/_jsxDEV(ControlLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter your password\",\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(HelpBlock, {\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            bsStyle: \"primary\",\n            children: \"Sign-In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"names":["React","Component","Row","FormGroup","FormControl","ControlLabel","Button","HelpBlock","isEmail","isEmpty","isLength","isContainWhiteSpace","Login","constructor","props","handleInputChange","event","target","value","name","formData","state","setState","validateLoginForm","e","errors","email","password","gte","lte","trim","login","preventDefault","alert","window","location","reload","formSubmitted","loading","render"],"sources":["C:/Users/dell/Desktop/React/cafe/src/Coponents/Login.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, FormGroup, FormControl, ControlLabel, Button, HelpBlock } from 'react-bootstrap';\r\nimport './login.css';\r\nimport { isEmail, isEmpty, isLength, isContainWhiteSpace } from 'shared/validator';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            formData: {}, // Contains login form data\r\n            errors: {}, // Contains login field errors\r\n            formSubmitted: false, // Indicates submit status of login form\r\n            loading: false // Indicates in progress state of login form\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        let { formData } = this.state;\r\n        formData[name] = value;\r\n\r\n        this.setState({\r\n            formData: formData\r\n        });\r\n    }\r\n\r\n    validateLoginForm = (e) => {\r\n\r\n        let errors = {};\r\n        const { formData } = this.state;\r\n\r\n        if (isEmpty(formData.email)) {\r\n            errors.email = \"Email can't be blank\";\r\n        } else if (!isEmail(formData.email)) {\r\n            errors.email = \"Please enter a valid email\";\r\n        }\r\n\r\n        if (isEmpty(formData.password)) {\r\n            errors.password = \"Password can't be blank\";\r\n        }  else if (isContainWhiteSpace(formData.password)) {\r\n            errors.password = \"Password should not contain white spaces\";\r\n        } else if (!isLength(formData.password, { gte: 6, lte: 16, trim: true })) {\r\n            errors.password = \"Password's length must between 6 to 16\";\r\n        }\r\n\r\n        if (isEmpty(errors)) {\r\n            return true;\r\n        } else {\r\n            return errors;\r\n        }\r\n    }\r\n\r\n    login = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        let errors = this.validateLoginForm();\r\n\r\n        if(errors === true){\r\n            alert(\"You are successfully signed in...\");\r\n            window.location.reload()\r\n        } else {\r\n            this.setState({\r\n                errors: errors,\r\n                formSubmitted: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors, formSubmitted } = this.state;\r\n\r\n        return (\r\n            <div className=\"Login\">\r\n                <Row>\r\n                    <form onSubmit={this.login}>\r\n                        <FormGroup controlId=\"email\" validationState={ formSubmitted ? (errors.email ? 'error' : 'success') : null }>\r\n                            <ControlLabel>Email</ControlLabel>\r\n                            <FormControl type=\"text\" name=\"email\" placeholder=\"Enter your email\" onChange={this.handleInputChange} />\r\n                        { errors.email &&\r\n                            <HelpBlock>{errors.email}</HelpBlock>\r\n                        }\r\n                        </FormGroup>\r\n                        <FormGroup controlId=\"password\" validationState={ formSubmitted ? (errors.password ? 'error' : 'success') : null }>\r\n                            <ControlLabel>Password</ControlLabel>\r\n                            <FormControl type=\"password\" name=\"password\" placeholder=\"Enter your password\" onChange={this.handleInputChange} />\r\n                        { errors.password &&\r\n                            <HelpBlock>{errors.password}</HelpBlock>\r\n                        }\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" bsStyle=\"primary\">Sign-In</Button>\r\n                    </form>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}