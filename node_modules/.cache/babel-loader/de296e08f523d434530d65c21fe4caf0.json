{"ast":null,"code":"import validator from 'validator';\n\nclass FormValidator {\n  constructor(validations) {\n    this.validations = validations;\n  }\n\n  validate(state) {\n    let validation = this.valid(); // for each validation rule\n\n    this.validations.forEach(rule => {\n      if (!validation[rule.field].isInvalid) {\n        const field_value = state[rule.field].toString();\n        const args = rule.args || [];\n        const validation_method = typeof rule.method === 'string' ? validator[rule.method] : rule.method;\n\n        if (validation_method(field_value, ...args, state) !== rule.validWhen) {\n          validation[rule.field] = {\n            isInvalid: true,\n            message: rule.message\n          };\n          validation.isValid = false;\n        }\n      }\n    });\n    return validation;\n  }\n\n  valid() {\n    const validation = {};\n    this.validations.map(rule => validation[rule.field] = {\n      isInvalid: false,\n      message: ''\n    });\n    return {\n      isValid: true,\n      ...validation\n    };\n  }\n\n}\n\nexport default FormValidator;","map":{"version":3,"names":["validator","FormValidator","constructor","validations","validate","state","validation","valid","forEach","rule","field","isInvalid","field_value","toString","args","validation_method","method","validWhen","message","isValid","map"],"sources":["C:/Users/dell/Desktop/React/cafe/src/Coponents/FormValidator.js"],"sourcesContent":["import validator from 'validator';\r\nclass FormValidator {\r\n\tconstructor(validations) {\r\n\t\tthis.validations = validations;\r\n\t}\r\n\tvalidate(state) {\r\n\t\tlet validation = this.valid();\r\n\t\t// for each validation rule\r\n\t\tthis.validations.forEach(rule => {\r\n\t\t\tif(!validation[rule.field].isInvalid) {\r\n\t\t\t\tconst field_value = state[rule.field].toString();\r\n\t\t\t\tconst args = rule.args || [];\r\n\t\t\t\tconst validation_method = typeof rule.method === 'string' ? validator[rule.method] : rule.method\r\n\t\t\t\tif(validation_method(field_value, ...args, state) !== rule.validWhen) {\r\n\t\t\t\t\tvalidation[rule.field] = {\r\n\t\t\t\t\t\tisInvalid: true,\r\n\t\t\t\t\t\tmessage: rule.message\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidation.isValid = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn validation;\r\n\t}\r\n\tvalid() {\r\n\t\tconst validation = {}\r\n\t\tthis.validations.map(rule => (validation[rule.field] = {\r\n\t\t\tisInvalid: false,\r\n\t\t\tmessage: ''\r\n\t\t}));\r\n\t\treturn {\r\n\t\t\tisValid: true,\r\n\t\t\t...validation\r\n\t\t};\r\n\t}\r\n}\r\nexport default FormValidator;"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;;AACA,MAAMC,aAAN,CAAoB;EACnBC,WAAW,CAACC,WAAD,EAAc;IACxB,KAAKA,WAAL,GAAmBA,WAAnB;EACA;;EACDC,QAAQ,CAACC,KAAD,EAAQ;IACf,IAAIC,UAAU,GAAG,KAAKC,KAAL,EAAjB,CADe,CAEf;;IACA,KAAKJ,WAAL,CAAiBK,OAAjB,CAAyBC,IAAI,IAAI;MAChC,IAAG,CAACH,UAAU,CAACG,IAAI,CAACC,KAAN,CAAV,CAAuBC,SAA3B,EAAsC;QACrC,MAAMC,WAAW,GAAGP,KAAK,CAACI,IAAI,CAACC,KAAN,CAAL,CAAkBG,QAAlB,EAApB;QACA,MAAMC,IAAI,GAAGL,IAAI,CAACK,IAAL,IAAa,EAA1B;QACA,MAAMC,iBAAiB,GAAG,OAAON,IAAI,CAACO,MAAZ,KAAuB,QAAvB,GAAkChB,SAAS,CAACS,IAAI,CAACO,MAAN,CAA3C,GAA2DP,IAAI,CAACO,MAA1F;;QACA,IAAGD,iBAAiB,CAACH,WAAD,EAAc,GAAGE,IAAjB,EAAuBT,KAAvB,CAAjB,KAAmDI,IAAI,CAACQ,SAA3D,EAAsE;UACrEX,UAAU,CAACG,IAAI,CAACC,KAAN,CAAV,GAAyB;YACxBC,SAAS,EAAE,IADa;YAExBO,OAAO,EAAET,IAAI,CAACS;UAFU,CAAzB;UAIAZ,UAAU,CAACa,OAAX,GAAqB,KAArB;QACA;MACD;IACD,CAbD;IAcA,OAAOb,UAAP;EACA;;EACDC,KAAK,GAAG;IACP,MAAMD,UAAU,GAAG,EAAnB;IACA,KAAKH,WAAL,CAAiBiB,GAAjB,CAAqBX,IAAI,IAAKH,UAAU,CAACG,IAAI,CAACC,KAAN,CAAV,GAAyB;MACtDC,SAAS,EAAE,KAD2C;MAEtDO,OAAO,EAAE;IAF6C,CAAvD;IAIA,OAAO;MACNC,OAAO,EAAE,IADH;MAEN,GAAGb;IAFG,CAAP;EAIA;;AAjCkB;;AAmCpB,eAAeL,aAAf"},"metadata":{},"sourceType":"module"}